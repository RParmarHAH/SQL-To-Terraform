CREATE OR REPLACE PROCEDURE DW_DEV.TEST.GET_AMS_EMPLOYEE_ID("EMPLOYEE_ENTERPRISE_ID" VARCHAR(16777216))
RETURNS TABLE ()
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

LET OP_RESULT RESULTSET := 
			(SELECT DISTINCT CASE 
			WHEN :EMPLOYEE_ENTERPRISE_ID NOT IN 
                (SELECT DISTINCT EMPLOYEE_ENTERPRISE_ID FROM DW_DEV.INTEGRATION.EMPLOYEE_CROSS_WALK)
            THEN OBJECT_CONSTRUCT(''Message'',''No data found, Please ensure ENTERPRISE_ID is correct'') 
            ----------------------------
            WHEN (CW.AMS_EMPLOYEE_KEY IS NULL AND CW.PAYROLL_EMPLOYEE_KEY IS NULL) 
            THEN OBJECT_CONSTRUCT(''Message'',''NO AMS OR PAYROLL RECORD FOUND'') 
            ---------------------------
            ELSE
                OBJECT_CONSTRUCT_KEEP_NULL
                (
                ''INACTIVE'',CW.INACTIVE,
                ''EMPLOYEE_FIRST_NAME'',CW.FIRST_NAME,
                ''EMPLOYEE_LAST_NAME'',CW.LAST_NAME,
                ''EMPLOYEE_ENTERPRISE_ID'',CW.EMPLOYEE_ENTERPRISE_ID,
                ''AMS_EMPLOYEE_ID'',EM.EMPLOYEE_ID,
                ''PAYROLL_EMPLOYEE_ID'',EMP.EMPLOYEE_ID,
                ''PAYROLL_ID'',EM.PAYROLL_ID ,
                ''GATOR_EMPLOYEE_ACCOUNT_ID'',CW.GATOR_EMPLOYEE_ACCOUNT_ID,
                ''COACHUPCARE_ID'',CW.COACHUPCARE_ID,
                ''CARIBOU_ID_SENT'',CW.CARIBOU_ID_SENT,
                ''SERVICENOW_ID'',CW.SERVICENOW_ID,
                ''DERIVED_WORKDAY_ID'',CW.DERIVED_WORKDAY_ID,
                ''WORKDAY_USERNAME'',CW.WORKDAY_USERNAME,
                ''WORKDAY_INTERNAL_ID'',CW.WORKDAY_INTERNAL_ID,
                ''BROADSPIRE_ID'',CW.BROADSPIRE_ID,
                ''OKTA_ID'',CW.OKTA_ID,
                ''OKTA_USERNAME'',CW.OKTA_USERNAME,
                ''ACTIVE_DIRECTORY_SID'',CW.ACTIVE_DIRECTORY_SID,
                ''EMPLOYEE_RISKONNECT_ID'',CW.EMPLOYEE_RISKONNECT_ID
                ) 
                END AS "EMPLOYEE DETAILS"
FROM DW_DEV.INTEGRATION.EMPLOYEE_CROSS_WALK CW
LEFT JOIN DW_DEV.INTEGRATION.DIM_EMPLOYEE_MERGED EM
    ON CW.AMS_EMPLOYEE_KEY = EM.EMPLOYEE_KEY
-- AND SS.SOURCE_SYSTEM_TYPE = ''AMS''
LEFT JOIN DW_DEV.INTEGRATION.DIM_EMPLOYEE_PAYROLL_MERGE_DEDUPE EMP
    ON CW.PAYROLL_EMPLOYEE_KEY = EMP.EMPLOYEE_KEY
LEFT JOIN DW_DEV.HAH.DIM_SOURCE_SYSTEM SS
    ON SS.SOURCE_SYSTEM_ID = EM.SOURCE_SYSTEM_ID
WHERE EMPLOYEE_ENTERPRISE_ID = CASE WHEN :EMPLOYEE_ENTERPRISE_ID NOT IN 
					                    (SELECT DISTINCT EMPLOYEE_ENTERPRISE_ID 
					                    FROM DW_DEV.INTEGRATION.EMPLOYEE_CROSS_WALK) 
			                    	THEN 10000001 
				                    ELSE :EMPLOYEE_ENTERPRISE_ID
				                    END);

RETURN TABLE(OP_RESULT);
END;
';
